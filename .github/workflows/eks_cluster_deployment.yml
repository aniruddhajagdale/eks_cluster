name: EKS Cluster Deployment

on:
  push:
    branches:
      - main
      - dev
  
jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: ${{vars.TF_VERSION}}

        # Set the working directory based on the branch/environment
      - name: Set Working Directory
        id : set-dir
        run: echo "WORKING_DIR=./environment/${{ github.ref_name == 'main' && 'prod' || 'dev' }}" >> $GITHUB_ENV

        # Authenticate using OIDC
      - name: Configure AWS Credentials (OIDC)
        id: aws-oidc
        run: |
          aws sts get-caller-identity
        env:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
          AWS_WEB_IDENTITY_TOKEN_FILE: ${{ github.token }}
        
      # Set Environment-Specific Variables (from GitHub Secrets or Environments)
      - name: Set Terraform Variables
        id: set-vars
        run: |
          TF_VAR_env = ${{vars.TF_VAR_env}}
          TF_VAR_cidr_block = ${{vars.TF_VAR_cidr_block}}
          TF_VAR_private_subnets_cidr = ${{vars.TF_VAR_private_subnets_cidr}}
          TF_VAR_public_subnets_cidr = ${{vars.TF_VAR_public_subnets_cidr}}
          TF_VAR_availability_zones = ${{vars.TF_VAR_availability_zones}}
          TF_VAR_cluster_name = ${{vars.TF_VAR_cluster_name}}
          TF_VAR_cluster_version = ${{vars.TF_VAR_cluster_version}}
          TF_VAR_max_size = ${{vars.TF_VAR_max_size}}
          TF_VAR_min_size = ${{vars.TF_VAR_min_size}}
          TF_VAR_desired_size = ${{vars.TF_VAR_desired_size}}
          TF_VAR_instance_types = ${{vars.TF_VAR_instance_types}}
          TF_VAR_region = ${{vars.TF_VAR_region}}

      # Run Terraform commands using the dynamic directory set above
      - name: Terraform Init
        run: terraform init
        working-directory: ${{env.WORKING_DIR}}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Apply
        if: github.ref_name == 'dev' || (github.ref_name == 'main' && github.event_name == 'push')
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

